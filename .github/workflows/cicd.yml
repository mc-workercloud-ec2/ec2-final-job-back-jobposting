name: Deploy to Amazon ECS

on:
  push:
    branches:
      - dev
permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
      - name: Add RDS info
        run: |
          echo "${{ secrets.RDS_INFO }}" | base64 --decode >> src/main/resources/config/application-dev.yml
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume:  arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/github-actions
          aws-region: ap-northeast-2  

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ec2-team-backend
          IMAGE_TAG: ${{ github.sha }}

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:jobposting
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:jobposting
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          
      - name: Checkout Kubernetes manifests repository
        uses: actions/checkout@v4
        with:
          repository: mc-workercloud-ec2/manifest
          ref: main
          token: ${{ secrets.ACTION_TOKEN }}
          path: manifest
  
  
      - name: Update Kubernetes resources
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ec2-team-backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          MANIFEST_PATH="manifest/jobposting/deployment.yaml" 
          NEW_IMAGE="$REGISTRY/$REPOSITORY:$IMAGE_TAG"
          sed -i "s|image:*|image: $REGISTRY\/$REPOSITORY:$IMAGE_TAG|" $MANIFEST_PATH
          cat $MANIFEST_PATH
  
      - name: Commit files
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd k8s-manifest-repo
          git config --global user.email "ec2team@multicampus.test"
          git config --global user.name "ec2team"
          git add .
          git commit -m "Update image tag: $IMAGE_TAG"
          git push -u origin main
          
      - name: Post a message in a channel
        uses: slackapi/slack-github-action@v2.0.0
        if: always()
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "<@channel> jobposting Build 결과: ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        
